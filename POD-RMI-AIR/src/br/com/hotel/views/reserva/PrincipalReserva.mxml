<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:util="br.com.hotel.util.*"
				creationComplete="inicializar(event)"				
				width="848" height="566" close="FlexGlobals.topLevelApplication.fechar(this)"
				layout="absolute" showCloseButton="true" title="Cadastro de Reservas ou Hospedagens">
	<fx:Script>
		<![CDATA[
			import br.com.hotel.modelo.Hospedagem;
			import br.com.hotel.modelo.Hospede;
			import br.com.hotel.modelo.Hotel;
			import br.com.hotel.modelo.Quarto;
			import br.com.hotel.modelo.Reserva;
			import br.com.hotel.util.Imagens;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.formatters.DateFormatter;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;

			
			public var hotel:Hotel = new Hotel();
			[Bindable]
			public var dpReservas:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var reserva:Reserva = new Reserva();
			public var dataFormatada:DateFormatter = new DateFormatter();
			protected function inicializar(event:FlexEvent):void
			{
				Alert.yesLabel = "SIM";
				Alert.noLabel = "NÃO";
				dpReservas.removeAll();
				dataFormatada.formatString = "DD/MM/YYYY HH:SS";
				FlexGlobals.topLevelApplication.objHotelSelecionado = new Hotel();
				FlexGlobals.topLevelApplication.objHospedeSelecionado = new Hospede();
				FlexGlobals.topLevelApplication.getListHoteis.addEventListener(ResultEvent.RESULT,listaHoteisResult);
				FlexGlobals.topLevelApplication.hotelControle.getHoteis();
				
			}
			public function listaHoteisResult(event:ResultEvent):void{
				FlexGlobals.topLevelApplication.listaHoteis = event.result as ArrayCollection;
			}
			
			protected function selecionarHotel(event:ListEvent):void
			{
				FlexGlobals.topLevelApplication.objHotelSelecionado = cbHotel.selectedItem as Hotel;
					dpReservas.removeAll();
				for each(var r:Reserva in FlexGlobals.topLevelApplication.objHotelSelecionado.reservas){
					dpReservas.addItem(r);
				}
				calendario.enabled = true;
			}
			
			protected function gravarReservaHospedagem(event:MouseEvent):void
			{
				var erros:String = new String();
				reserva = new Reserva();
				if(FlexGlobals.topLevelApplication.objHospedeSelecionado.cpf == null)
					erros += "SELECIONE UM HOSPEDE\n";
				
				if(tipoEstadia.selectedValue == null)
					erros += "SELECIONE O TIPO DE ESTADIA\n";
				
				if(erros.length>0){
					Alert.show(erros,"ATENÇÃO");
					return;
				}
				
				if(verificarDebitoHospede(FlexGlobals.topLevelApplication.objHospedeSelecionado)){
					Alert.show("Hospede com debito\nDeseja visualizar local do debito","ATENÇÃO",Alert.YES|Alert.NO,null,visualizarLocalDebito);
					return;
				}
					
				//Preencher oo objeto reserva
				reserva.dataReserva = new Date();
				reserva.dataInicio = campoDataInicio.selectedDate;
				reserva.dataFim = campoDataFim.selectedDate;
				reserva.hospede = FlexGlobals.topLevelApplication.objHospedeSelecionado;
				reserva.quarto = cbQuarto.selectedItem as Quarto;
				if(tipoEstadia.selectedValue.toString() == "Hospedagem"){
					var hospedagem:Hospedagem = new Hospedagem();
					hospedagem.dataInicioHospedagem = campoDataInicio.selectedDate;
					hospedagem.dataFimHospedagem = campoDataFim.selectedDate;
					hospedagem.dataInicioHospedagem.setHours(12,00,00,00);
					hospedagem.dataFimHospedagem.setHours(12,00,00,00);
					reserva.hospedagem = hospedagem;
				}
				FlexGlobals.topLevelApplication.objHotelSelecionado.reservas.addItem(reserva);
				FlexGlobals.topLevelApplication.objHospedeSelecionado.reservas.addItem(reserva);
				FlexGlobals.topLevelApplication.getAdicionarReserva.addEventListener(ResultEvent.RESULT,adicionarReservarResult);
				FlexGlobals.topLevelApplication.hotelControle.adicionarReserva(
					FlexGlobals.topLevelApplication.objHotelSelecionado,
					reserva.quarto,reserva
				);
			}
			public function visualizarLocalDebito(event:CloseEvent):void{
				if(event.detail == Alert.YES){
					for each(var q:Quarto in FlexGlobals.topLevelApplication.objHotelSelecionado.quartos){
						for each(var r:Reserva in q.reservas){
							if(r.hospedagem!=null)
								if(!r.hospedagem.pago){
									Alert.show("Numero Quarto: " + q.num 
										+ "Valor: " + q.preco ,"ATENÇÃO");
									return;
								}
									
						}
					}
				}
			}
			public function verificarDebitoHospede(hospede:Hospede):Boolean{
				for each(var r:Reserva in hospede.reservas){
					if(r.hospedagem!=null)
						if(!r.hospedagem.pago)
							return true;
				}
				return false;
			}
			public function adicionarReservarResult(event:ResultEvent):void{
				if(event.result){
					Alert.show("Cadastro realizado com sucesso");
					limparCampos();
					cbHotel.selectedItem =FlexGlobals.topLevelApplication.objHotelSelecionado;
				}
			}
			public function limparCampos():void{
				FlexGlobals.topLevelApplication.objHospedeSelecionado = new Hospede();
				campoDataFim.selectedDate = null;
				campoDataInicio.selectedDate = null;
				
				
			}
			protected function buscarHospedeCPF(event:MouseEvent):void
			{
				FlexGlobals.topLevelApplication.getListHospedeCPF.addEventListener(ResultEvent.RESULT,listHopedeCpf);
				FlexGlobals.topLevelApplication.hospedeControle.buscarHospedeCPF(campoCPF.text);
			}
			public function listHopedeCpf(event:ResultEvent):void{
				FlexGlobals.topLevelApplication.objHospedeSelecionado = event.result as Hospede;
				
			}
			public function funcaoLabel(item:Object,coluna:DataGridColumn):String{
				
				if(coluna.dataField == "dataReserva")
					return dataFormatada.format(item.dataReserva);
				if(coluna.dataField == "dataInicio")
					return dataFormatada.format(item.dataInicio);
				if(coluna.dataField == "dataFim")
					return dataFormatada.format(item.dataFim);
				return "";
			}
			public function funcaoLabelSituacao(item:Object,coluna:DataGridColumn):String{
				if(item.hospedagem == null)
					return "Reserva";
				else
					return "Hospedado";
			}
			public function pintarLinhas(item:Object, rowIndex:int, dataIndex:int, color:uint):uint {
				trace(ObjectUtil.dateCompare(item.dataFim,new Date()));
				if (item.hospedagem == null)
					if(ObjectUtil.dateCompare(item.dataFim,new Date())> -1)
						return 0xFDFE8C;
					else
						return 0xFF6161;
				else if (item.hospedagem != null)
					return 0xA2FEA2;
				else
					return color;
			}
			
			protected function hospedarSelecionado(event:MouseEvent):void
			{
				reserva = new Reserva();
				reserva = dgReservas.selectedItem as Reserva;
				if(reserva.hospedagem == null){
					panelHospedar.visible = true;
				}else{
					Alert.show("Linha selecionada já está hospedada","ATENÇÃO");
				}	
			}
			
			protected function gravarHospedagem(event:MouseEvent):void
			{
				if(hospedagemInicial.selectedDate == null){
					Alert.show("Selecione a data de entrada","ATENÇÃO");
				}else{

					Alert.show("Receber Pagamento?","Efetuar Pagamento",Alert.YES|Alert.NO,null,confirmarHospedagemPagamento);
				}
				
			}
			public function confirmarHospedagemPagamento(event:CloseEvent):void	{
				var hop:Hospedagem = new Hospedagem();
				
				if(event.detail == Alert.YES){
					hop.pago = true;
				}
				hop.dataInicioHospedagem = hospedagemInicial.selectedDate;
					if(hospedagemFinal.selectedDate != null)
						hop.dataFimHospedagem = hospedagemFinal.selectedDate;
				reserva.hospedagem = hop;
				FlexGlobals.topLevelApplication.getEfetuarHospedagem.addEventListener(ResultEvent.RESULT,efetuarHospedagemResult);
				FlexGlobals.topLevelApplication.hotelControle.efetuarHospedagem(
						FlexGlobals.topLevelApplication.objHotelSelecionado,
						reserva);
				panelHospedar.visible = false;	
			}	
			protected function efetuarHospedagemResult(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				if(event.result){
					panelHospedar.visible = false;
					Alert.show("Hospedagem realizada com sucesso!");
				}else{
					Alert.show("Hospedagem realizada com sucesso!");
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:RadioButtonGroup id="tipoEstadia"/>
	</fx:Declarations>
					<!--
					Usar para realizar reservas 
					disabledRanges="{[new Date(2012,4,14),new Date(2012,4,16),new Date(2012,4,19)]}"-->
	<mx:DateChooser 
		id="calendario"
		x="10" y="10" dayNames="['D','S','T','Q','Q','S','S']" enabled="false"
		monthNames="{FlexGlobals.topLevelApplication.meses}"
		selectableRange="{{rangeStart: new Date()}}" selectedDate="{new Date()}"
		yearNavigationEnabled="true"/>
	<s:Label x="205" y="12" text="Selecione o Hotel:"/>
	<mx:ComboBox 
		dataProvider="{FlexGlobals.topLevelApplication.listaHoteis}"
		labelField="nome"
		change="selecionarHotel(event)"
		id="cbHotel" x="205" y="30" width="192"/>
	<s:Label x="212" y="72" text="CPF:"/>
	<util:MasterTextInput 
		fullText="{FlexGlobals.topLevelApplication.objHospedeSelecionado.cpf}"
		inputMask="999.999.999-99"
		id="campoCPF" x="210" y="88" width="124" blankMaskChar=" "
		 nextFocusOnEnter="true"/>
	<s:Label x="423" y="12" text="Selecione o quarto:"/>
	<mx:ComboBox 
		dataProvider="{FlexGlobals.topLevelApplication.objHotelSelecionado.quartos}"
		id="cbQuarto"
		labelField="num"
		x="423" y="30" width="141"/>
	<mx:HRule x="208" y="64" width="610"/>
	<s:Label x="395" y="73" text="Nome Hospede:"/>
	<mx:Button id="btBuscarCPF" 
			   x="342" y="87" icon="{Imagens.localizar}"
			   click="buscarHospedeCPF(event)"/>
	<util:MasterTextInput 
		enabled="false"
		text="{FlexGlobals.topLevelApplication.objHospedeSelecionado.nome}"
		id="campoNomeHospede" x="398" y="88" width="351"/>
	<mx:Button id="btAbrirHospede" 
			   x="762" y="87" icon="{Imagens.localizar}"
			   click="FlexGlobals.topLevelApplication.abrirPrincipalHospede()"/>
	<util:RowColorDataGrid
		id="dgReservas"
		rowColorFunction="pintarLinhas"
		dataProvider="{FlexGlobals.topLevelApplication.objHotelSelecionado.reservas}"
		x="9" y="213" width="809" height="248">
		<util:columns>
			<mx:DataGridColumn headerText="Data Reserva" width="120"
							   dataField="dataReserva"
							   labelFunction="funcaoLabel"
							   />
			<mx:DataGridColumn headerText="Nome do Hospede"
							   dataField="hospede.nome"
							   />
			<mx:DataGridColumn headerText="Data Inicio" width="120"
							   dataField="dataInicio"
							   labelFunction="funcaoLabel"
							   />
			<mx:DataGridColumn headerText="Data Fim" width="120"
							   dataField="dataFim"
							   labelFunction="funcaoLabel"
							   />
			<mx:DataGridColumn headerText="Num Quarto" width="80"
							   
							   dataField="quarto.num"
							   />
			<mx:DataGridColumn headerText="Situacao" width="100"
							   dataField="hospedagem"
							   labelFunction="funcaoLabelSituacao"
							   />
		</util:columns>
	</util:RowColorDataGrid>
	<mx:Canvas x="80" y="469" width="67" height="10" backgroundColor="#FDFE8C"/>
	<mx:Canvas x="-1" y="484" width="829" height="42">
		<mx:Button id="btFechar" x="730" y="10" width="89" label="Fechar" icon="{Imagens.cancelar}"/>
		<mx:Button 
			id="btNovo" x="10" y="10" width="89" 
			label="Novo" icon="{Imagens.adicionar}"/>
		<mx:Button 
			id="btHospedar" x="108" y="10" width="111" 
			label="Hospedar" icon="{Imagens.alterar}"
			click="hospedarSelecionado(event)"
			/>
		<mx:Button 
			id="btExcluir" x="227" y="10" width="123" 
			label="Finalizar" icon="{Imagens.excluir}"
			/>
	</mx:Canvas>
	<s:Label x="11" y="469" text="Reservado"/>
	<mx:Canvas x="243" y="469" width="67" height="10" backgroundColor="#A2FEA2"/>
	<mx:Canvas x="433" y="469" width="67" height="10" backgroundColor="#FF6161"/>
	<s:Label x="324" y="469" text="Reservas vencidas"/>
	<s:Label x="161" y="469" text="Hospedagem"/>
	<s:Label x="429" y="118" text="Período de estadia:"/>
	<mx:DateField 
		toolTip="Selecione a data inicial"
		formatString="DD/MM/YYYY"
		id="campoDataInicio" x="429" y="149" width="111"/>
	<mx:HRule x="429" y="138" width="261" height="3"/>
	<s:Label x="556" y="155" text="a"/>
	<mx:DateField 
		toolTip="Selecione a data final"
		formatString="DD/MM/YYYY"
		id="campoDataFim" x="579" y="149" width="111"/>
	<s:Label x="210" y="120" text="Tipo de estadia:"/>
	<mx:HRule x="210" y="138" width="200" height="3"/>
	<mx:RadioButton x="214" y="152" label="Reserva" groupName="tipoEstadia"/>
	<mx:RadioButton x="307" y="152" label="Hospedagem" groupName="tipoEstadia"/>
	<mx:Button 
		id="btGravar" x="726" y="148" 
		label="Gravar" icon="{Imagens.confirmar}" click="gravarReservaHospedagem(event)"/>
	<s:Label x="10" y="195" text="Lista de reservas e/ou hospedagens"/>
	<mx:HRule x="10" y="208" width="809"/>
	<mx:Panel 
		layout="absolute"
		id="panelHospedar"
		title="Hospedagem"
		visible="false"
		x="68" y="136" width="693" height="200">
		<s:Label x="6" y="10" text="Data da Reserva:"/>
		<mx:TextInput 
			text="{dataFormatada.format(reserva.dataReserva)}"
			x="6" y="28" width="134" enabled="false"/>
		<s:Label x="173" y="10" text="Nome do Hospede:"/>
		<mx:TextInput 
			text="{reserva.hospede.nome}"
			x="174" y="28" width="340" enabled="false"/>
		<s:Label x="6" y="56" text="Periodo Reservado:"/>
		<mx:TextInput 
			text="{dataFormatada.format(reserva.dataInicio)}"
			x="6" y="74" width="134" enabled="false"/>
		<mx:TextInput 
			text="{dataFormatada.format(reserva.dataFim)}"
			x="174" y="74" width="134" enabled="false"/>
		<s:Label x="153" y="79" text="a"/>
		<mx:VRule x="320" y="65" width="1" height="29"/>
		<s:Label x="330" y="56" text="Dados da Hospedagem:"/>
		<mx:DateField 
			toolTip="Selecione a data final"
			formatString="DD/MM/YYYY"
			id="hospedagemInicial" x="385" y="72" width="111"/>
		<mx:DateField 
			toolTip="Selecione a data final"
			formatString="DD/MM/YYYY"
			id="hospedagemFinal" x="553" y="72" width="111"/>
		<s:Label x="329" y="77" text="Entrada:"/>
		<s:Label x="513" y="78" text="Saída:"/>
		<util:MasterTextInput x="535" y="28" width="124" blankMaskChar=" " enabled="false"
							  fullText="{reserva.hospede.cpf}"
							  inputMask="999.999.999-99" nextFocusOnEnter="true"/>
		<s:Label x="538" y="11" text="CPF:"/>
		<mx:Canvas width="673" height="47" x="0" y="112">
			<mx:Button id="confirmarHospedagem" x="446" y="14" width="111" label="Confirmar"
					   icon="{Imagens.confirmar}" click="gravarHospedagem(event)"/>
			<mx:Button id="cancelarHospedagem" x="565" y="13" width="97" label="cancelar"
					   click="{panelHospedar.visible = false}" icon="{Imagens.cancelar}"/>
		</mx:Canvas>
	</mx:Panel>
	
	
</mx:TitleWindow>
